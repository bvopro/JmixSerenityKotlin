
buildscript {
    dependencies {
        classpath "net.serenity-bdd:serenity-single-page-report:3.6.12"
    }
}

plugins {
    id 'io.jmix' version '1.4.3'
    id 'org.jetbrains.kotlin.jvm' version '1.7.20'
    id 'java'

    id "jacoco"
    id "net.serenity-bdd.serenity-gradle-plugin" version "3.6.7"
}

apply plugin: 'org.springframework.boot'

jmix {
    bomVersion = '1.4.4'
}

group = 'com.company'
version = '0.0.1-SNAPSHOT'


repositories {
    mavenCentral()
    maven {
        url 'https://global.repo.jmix.io/repository/public'
    }
}

ext {
    serenityVersion = '3.6.12'
    cucumberVersion = '7.11.0';
    junitPlatformVersion = '1.8.2'

    assertJVersion = '3.22.0'
    logbackVersion = '1.2.10'
}

dependencies {
    implementation 'io.jmix.core:jmix-core-starter'
    implementation 'io.jmix.data:jmix-eclipselink-starter'
    implementation 'io.jmix.ui:jmix-ui-starter'
    implementation 'io.jmix.ui:jmix-ui-data-starter'
    implementation 'io.jmix.ui:jmix-ui-themes-compiled'
    implementation 'io.jmix.ui:jmix-ui-widgets-compiled'
    implementation 'io.jmix.security:jmix-security-starter'
    implementation 'io.jmix.security:jmix-security-ui-starter'
    implementation 'io.jmix.security:jmix-security-data-starter'
    implementation 'io.jmix.localfs:jmix-localfs-starter'
    implementation 'io.jmix.datatools:jmix-datatools-starter'
    implementation 'io.jmix.datatools:jmix-datatools-ui-starter'

    implementation 'org.springframework.boot:spring-boot-starter-web'

    runtimeOnly 'org.hsqldb:hsqldb'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    //testImplementation "io.cucumber:cucumber-java:${cucumberVersion}"
    //testImplementation "io.cucumber:cucumber-junit:${cucumberVersion}"
    testImplementation "io.cucumber:cucumber-spring:${cucumberVersion}"
    testImplementation "io.cucumber:cucumber-junit-platform-engine:${cucumberVersion}"
    testImplementation "org.junit.platform:junit-platform-suite:${junitPlatformVersion}"

    //testImplementation "net.serenity-bdd:serenity-junit5:${serenityVersion}"
    testImplementation "net.serenity-bdd:serenity-core:${serenityVersion}"
    testImplementation "net.serenity-bdd:serenity-spring:${serenityVersion}"
    testImplementation "net.serenity-bdd:serenity-cucumber:${serenityVersion}"
    testImplementation "org.slf4j:slf4j-simple:2.0.5"
}

defaultTasks 'clean', 'test', 'aggregate'

test {
    testLogging.showStandardStreams = true
    systemProperties System.getProperties()
    useJUnitPlatform()
}

gradle.startParameter.continueOnFailure = true

test.finalizedBy(aggregate)

jacoco {
    toolVersion = "0.8.8"
}

configurations {
//    cucumberRuntime {
//        extendsFrom testImplementation
//    }
    all {
        exclude group: 'org.codehaus.groovy', module: 'groovy'
    }
}


aggregate {
    serenity {
        testRoot="src/test/kotlin"
        outputDirectory="build/serenity"
        requirementsBaseDir="src/test/ressources/features"
        //outputDirectory = layout.buildDirectory.toString() + "/serenity"
        //testRoot = project.rootProject.projectDir.toString() + '/src/test/kotlin/com/company/jmixserenitykotlin'
        //requirementsBaseDir = project.rootProject.projectDir.toString() + '/src/test/resources/features'
    }
}

serenity {
    //outputDirectory = layout.buildDirectory.toString() + "/serenity"
    // reports = ["html","single-page-html"]
    //testRoot = project.rootProject.projectDir.toString() + '/src/test/resources/features'
    //requirementsBaseDir = project.rootProject.projectDir.toString() + '/src/test/resources/features'
}
